import org.gradle.internal.jvm.Jvm

plugins {
    id "com.jfrog.bintray"
}

apply plugin: 'java'
apply plugin: 'maven-publish'

group libGroup
version libVersion
def libName = 'executordecorator-compiler'

//noinspection GroovyUnusedAssignment
sourceCompatibility = JavaVersion.VERSION_1_6

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    implementation project(':executordecorator-annotations')
    implementation 'com.squareup:javapoet:1.11.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.testing.compile:compile-testing:0.15'
    testImplementation files(Jvm.current().getToolsJar())
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId libGroup
            artifactId libName
            version libVersion

            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "$buildDir/repo"
        }
    }
}
test {
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}

bintray {
    user = bintrayUser
    key = bintrayKey

    dryRun = false
    publish = true
    publications = ['maven']
    pkg {
        repo = 'maven'         // The repository
        name = libName // The package
        desc = 'Annotation library which create a decorator for interfaces that delegate any actions with a executor'
        websiteUrl = 'https://github.com/sagix/executordecorator'
        issueTrackerUrl = 'https://github.com/sagix/executordecorator/issues'
        vcsUrl = 'https://github.com/sagix/executordecorator/issues.git'
        licenses = ['ISC']
        labels = ['executor', 'decorator', 'asynchronous']
        publicDownloadNumbers = true
    }
}
